#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18052
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Gestor_Deportes")]
	public partial class DBDeportesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCiudad(Ciudad instance);
    partial void UpdateCiudad(Ciudad instance);
    partial void DeleteCiudad(Ciudad instance);
    partial void Inserttorneo(torneo instance);
    partial void Updatetorneo(torneo instance);
    partial void Deletetorneo(torneo instance);
    partial void InsertDeporte(Deporte instance);
    partial void UpdateDeporte(Deporte instance);
    partial void DeleteDeporte(Deporte instance);
    partial void Insertdeportista(deportista instance);
    partial void Updatedeportista(deportista instance);
    partial void Deletedeportista(deportista instance);
    partial void InsertEquipo(Equipo instance);
    partial void UpdateEquipo(Equipo instance);
    partial void DeleteEquipo(Equipo instance);
    partial void Insertfecha_torneo(fecha_torneo instance);
    partial void Updatefecha_torneo(fecha_torneo instance);
    partial void Deletefecha_torneo(fecha_torneo instance);
    partial void Insertinformacion_equipo(informacion_equipo instance);
    partial void Updateinformacion_equipo(informacion_equipo instance);
    partial void Deleteinformacion_equipo(informacion_equipo instance);
    partial void Insertlocalia(localia instance);
    partial void Updatelocalia(localia instance);
    partial void Deletelocalia(localia instance);
    partial void InsertPais(Pais instance);
    partial void UpdatePais(Pais instance);
    partial void DeletePais(Pais instance);
    partial void Insertpalmares(palmares instance);
    partial void Updatepalmares(palmares instance);
    partial void Deletepalmares(palmares instance);
    partial void Insertpartido(partido instance);
    partial void Updatepartido(partido instance);
    partial void Deletepartido(partido instance);
    partial void Insertstaff(staff instance);
    partial void Updatestaff(staff instance);
    partial void Deletestaff(staff instance);
    partial void Inserttemporada(temporada instance);
    partial void Updatetemporada(temporada instance);
    partial void Deletetemporada(temporada instance);
    partial void Inserttipo_competicion(tipo_competicion instance);
    partial void Updatetipo_competicion(tipo_competicion instance);
    partial void Deletetipo_competicion(tipo_competicion instance);
    partial void InsertTipo_Deporte(Tipo_Deporte instance);
    partial void UpdateTipo_Deporte(Tipo_Deporte instance);
    partial void DeleteTipo_Deporte(Tipo_Deporte instance);
    partial void Inserttitulos(titulos instance);
    partial void Updatetitulos(titulos instance);
    partial void Deletetitulos(titulos instance);
    #endregion
		
		public DBDeportesDataContext() : 
				base(global::Entidades.Properties.Settings.Default.Gestor_DeportesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDeportesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDeportesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDeportesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDeportesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ciudad> Ciudad
		{
			get
			{
				return this.GetTable<Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<torneo> torneo
		{
			get
			{
				return this.GetTable<torneo>();
			}
		}
		
		public System.Data.Linq.Table<Deporte> Deporte
		{
			get
			{
				return this.GetTable<Deporte>();
			}
		}
		
		public System.Data.Linq.Table<deportista> deportista
		{
			get
			{
				return this.GetTable<deportista>();
			}
		}
		
		public System.Data.Linq.Table<Equipo> Equipo
		{
			get
			{
				return this.GetTable<Equipo>();
			}
		}
		
		public System.Data.Linq.Table<fecha_torneo> fecha_torneo
		{
			get
			{
				return this.GetTable<fecha_torneo>();
			}
		}
		
		public System.Data.Linq.Table<informacion_equipo> informacion_equipo
		{
			get
			{
				return this.GetTable<informacion_equipo>();
			}
		}
		
		public System.Data.Linq.Table<localia> localia
		{
			get
			{
				return this.GetTable<localia>();
			}
		}
		
		public System.Data.Linq.Table<Pais> Pais
		{
			get
			{
				return this.GetTable<Pais>();
			}
		}
		
		public System.Data.Linq.Table<palmares> palmares
		{
			get
			{
				return this.GetTable<palmares>();
			}
		}
		
		public System.Data.Linq.Table<partido> partido
		{
			get
			{
				return this.GetTable<partido>();
			}
		}
		
		public System.Data.Linq.Table<staff> staff
		{
			get
			{
				return this.GetTable<staff>();
			}
		}
		
		public System.Data.Linq.Table<temporada> temporada
		{
			get
			{
				return this.GetTable<temporada>();
			}
		}
		
		public System.Data.Linq.Table<tipo_competicion> tipo_competicion
		{
			get
			{
				return this.GetTable<tipo_competicion>();
			}
		}
		
		public System.Data.Linq.Table<Tipo_Deporte> Tipo_Deporte
		{
			get
			{
				return this.GetTable<Tipo_Deporte>();
			}
		}
		
		public System.Data.Linq.Table<titulos> titulos
		{
			get
			{
				return this.GetTable<titulos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudad")]
	public partial class Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_estado;
		
		private string _id_pais;
		
		private string _nombre_estado;
		
		private EntityRef<Pais> _Pais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_estadoChanging(string value);
    partial void Onid_estadoChanged();
    partial void Onid_paisChanging(string value);
    partial void Onid_paisChanged();
    partial void Onnombre_estadoChanging(string value);
    partial void Onnombre_estadoChanged();
    #endregion
		
		public Ciudad()
		{
			this._Pais = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pais", DbType="VarChar(3)")]
		public string id_pais
		{
			get
			{
				return this._id_pais;
			}
			set
			{
				if ((this._id_pais != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_paisChanging(value);
					this.SendPropertyChanging();
					this._id_pais = value;
					this.SendPropertyChanged("id_pais");
					this.Onid_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_estado", DbType="VarChar(50)")]
		public string nombre_estado
		{
			get
			{
				return this._nombre_estado;
			}
			set
			{
				if ((this._nombre_estado != value))
				{
					this.Onnombre_estadoChanging(value);
					this.SendPropertyChanging();
					this._nombre_estado = value;
					this.SendPropertyChanged("nombre_estado");
					this.Onnombre_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Ciudad", Storage="_Pais", ThisKey="id_pais", OtherKey="id_pais", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				Pais previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.Ciudad.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.Ciudad.Add(this);
						this._id_pais = value.id_pais;
					}
					else
					{
						this._id_pais = default(string);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.torneo")]
	public partial class torneo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_torneo;
		
		private string _id_deporte;
		
		private string _tipo_torneo;
		
		private string _nombre_torneo;
		
		private System.Nullable<int> _nro_participantes;
		
		private string _pais_organizador;
		
		private EntitySet<temporada> _temporada;
		
		private EntityRef<Deporte> _Deporte;
		
		private EntityRef<tipo_competicion> _tipo_competicion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_torneoChanging(string value);
    partial void Onid_torneoChanged();
    partial void Onid_deporteChanging(string value);
    partial void Onid_deporteChanged();
    partial void Ontipo_torneoChanging(string value);
    partial void Ontipo_torneoChanged();
    partial void Onnombre_torneoChanging(string value);
    partial void Onnombre_torneoChanged();
    partial void Onnro_participantesChanging(System.Nullable<int> value);
    partial void Onnro_participantesChanged();
    partial void Onpais_organizadorChanging(string value);
    partial void Onpais_organizadorChanged();
    #endregion
		
		public torneo()
		{
			this._temporada = new EntitySet<temporada>(new Action<temporada>(this.attach_temporada), new Action<temporada>(this.detach_temporada));
			this._Deporte = default(EntityRef<Deporte>);
			this._tipo_competicion = default(EntityRef<tipo_competicion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_torneo", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_torneo
		{
			get
			{
				return this._id_torneo;
			}
			set
			{
				if ((this._id_torneo != value))
				{
					this.Onid_torneoChanging(value);
					this.SendPropertyChanging();
					this._id_torneo = value;
					this.SendPropertyChanged("id_torneo");
					this.Onid_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_deporte", DbType="VarChar(10)")]
		public string id_deporte
		{
			get
			{
				return this._id_deporte;
			}
			set
			{
				if ((this._id_deporte != value))
				{
					if (this._Deporte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_deporteChanging(value);
					this.SendPropertyChanging();
					this._id_deporte = value;
					this.SendPropertyChanged("id_deporte");
					this.Onid_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_torneo", DbType="VarChar(10)")]
		public string tipo_torneo
		{
			get
			{
				return this._tipo_torneo;
			}
			set
			{
				if ((this._tipo_torneo != value))
				{
					if (this._tipo_competicion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontipo_torneoChanging(value);
					this.SendPropertyChanging();
					this._tipo_torneo = value;
					this.SendPropertyChanged("tipo_torneo");
					this.Ontipo_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_torneo", DbType="VarChar(50)")]
		public string nombre_torneo
		{
			get
			{
				return this._nombre_torneo;
			}
			set
			{
				if ((this._nombre_torneo != value))
				{
					this.Onnombre_torneoChanging(value);
					this.SendPropertyChanging();
					this._nombre_torneo = value;
					this.SendPropertyChanged("nombre_torneo");
					this.Onnombre_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nro_participantes", DbType="Int")]
		public System.Nullable<int> nro_participantes
		{
			get
			{
				return this._nro_participantes;
			}
			set
			{
				if ((this._nro_participantes != value))
				{
					this.Onnro_participantesChanging(value);
					this.SendPropertyChanging();
					this._nro_participantes = value;
					this.SendPropertyChanged("nro_participantes");
					this.Onnro_participantesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pais_organizador", DbType="VarChar(3)")]
		public string pais_organizador
		{
			get
			{
				return this._pais_organizador;
			}
			set
			{
				if ((this._pais_organizador != value))
				{
					this.Onpais_organizadorChanging(value);
					this.SendPropertyChanging();
					this._pais_organizador = value;
					this.SendPropertyChanged("pais_organizador");
					this.Onpais_organizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="torneo_temporada", Storage="_temporada", ThisKey="id_torneo", OtherKey="id_torneo")]
		public EntitySet<temporada> temporada
		{
			get
			{
				return this._temporada;
			}
			set
			{
				this._temporada.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_torneo", Storage="_Deporte", ThisKey="id_deporte", OtherKey="id_deporte", IsForeignKey=true)]
		public Deporte Deporte
		{
			get
			{
				return this._Deporte.Entity;
			}
			set
			{
				Deporte previousValue = this._Deporte.Entity;
				if (((previousValue != value) 
							|| (this._Deporte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deporte.Entity = null;
						previousValue.torneo.Remove(this);
					}
					this._Deporte.Entity = value;
					if ((value != null))
					{
						value.torneo.Add(this);
						this._id_deporte = value.id_deporte;
					}
					else
					{
						this._id_deporte = default(string);
					}
					this.SendPropertyChanged("Deporte");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_competicion_torneo", Storage="_tipo_competicion", ThisKey="tipo_torneo", OtherKey="id_tipo_competicion", IsForeignKey=true)]
		public tipo_competicion tipo_competicion
		{
			get
			{
				return this._tipo_competicion.Entity;
			}
			set
			{
				tipo_competicion previousValue = this._tipo_competicion.Entity;
				if (((previousValue != value) 
							|| (this._tipo_competicion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_competicion.Entity = null;
						previousValue.torneo.Remove(this);
					}
					this._tipo_competicion.Entity = value;
					if ((value != null))
					{
						value.torneo.Add(this);
						this._tipo_torneo = value.id_tipo_competicion;
					}
					else
					{
						this._tipo_torneo = default(string);
					}
					this.SendPropertyChanged("tipo_competicion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_temporada(temporada entity)
		{
			this.SendPropertyChanging();
			entity.torneo = this;
		}
		
		private void detach_temporada(temporada entity)
		{
			this.SendPropertyChanging();
			entity.torneo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deporte")]
	public partial class Deporte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_deporte;
		
		private string _nombre_deporte;
		
		private string _tipo_deporte;
		
		private System.Nullable<int> _nro_jugadores;
		
		private EntitySet<torneo> _torneo;
		
		private EntitySet<deportista> _deportista;
		
		private EntitySet<Equipo> _Equipo;
		
		private EntityRef<Tipo_Deporte> _Tipo_Deporte1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_deporteChanging(string value);
    partial void Onid_deporteChanged();
    partial void Onnombre_deporteChanging(string value);
    partial void Onnombre_deporteChanged();
    partial void Ontipo_deporteChanging(string value);
    partial void Ontipo_deporteChanged();
    partial void Onnro_jugadoresChanging(System.Nullable<int> value);
    partial void Onnro_jugadoresChanged();
    #endregion
		
		public Deporte()
		{
			this._torneo = new EntitySet<torneo>(new Action<torneo>(this.attach_torneo), new Action<torneo>(this.detach_torneo));
			this._deportista = new EntitySet<deportista>(new Action<deportista>(this.attach_deportista), new Action<deportista>(this.detach_deportista));
			this._Equipo = new EntitySet<Equipo>(new Action<Equipo>(this.attach_Equipo), new Action<Equipo>(this.detach_Equipo));
			this._Tipo_Deporte1 = default(EntityRef<Tipo_Deporte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_deporte", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_deporte
		{
			get
			{
				return this._id_deporte;
			}
			set
			{
				if ((this._id_deporte != value))
				{
					this.Onid_deporteChanging(value);
					this.SendPropertyChanging();
					this._id_deporte = value;
					this.SendPropertyChanged("id_deporte");
					this.Onid_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_deporte", DbType="VarChar(50)")]
		public string nombre_deporte
		{
			get
			{
				return this._nombre_deporte;
			}
			set
			{
				if ((this._nombre_deporte != value))
				{
					this.Onnombre_deporteChanging(value);
					this.SendPropertyChanging();
					this._nombre_deporte = value;
					this.SendPropertyChanged("nombre_deporte");
					this.Onnombre_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_deporte", DbType="VarChar(10)")]
		public string tipo_deporte
		{
			get
			{
				return this._tipo_deporte;
			}
			set
			{
				if ((this._tipo_deporte != value))
				{
					if (this._Tipo_Deporte1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontipo_deporteChanging(value);
					this.SendPropertyChanging();
					this._tipo_deporte = value;
					this.SendPropertyChanged("tipo_deporte");
					this.Ontipo_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nro_jugadores", DbType="Int")]
		public System.Nullable<int> nro_jugadores
		{
			get
			{
				return this._nro_jugadores;
			}
			set
			{
				if ((this._nro_jugadores != value))
				{
					this.Onnro_jugadoresChanging(value);
					this.SendPropertyChanging();
					this._nro_jugadores = value;
					this.SendPropertyChanged("nro_jugadores");
					this.Onnro_jugadoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_torneo", Storage="_torneo", ThisKey="id_deporte", OtherKey="id_deporte")]
		public EntitySet<torneo> torneo
		{
			get
			{
				return this._torneo;
			}
			set
			{
				this._torneo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_deportista", Storage="_deportista", ThisKey="id_deporte", OtherKey="id_deporte")]
		public EntitySet<deportista> deportista
		{
			get
			{
				return this._deportista;
			}
			set
			{
				this._deportista.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_Equipo", Storage="_Equipo", ThisKey="id_deporte", OtherKey="id_deporte")]
		public EntitySet<Equipo> Equipo
		{
			get
			{
				return this._Equipo;
			}
			set
			{
				this._Equipo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Deporte_Deporte", Storage="_Tipo_Deporte1", ThisKey="tipo_deporte", OtherKey="id_tipo_deporte", IsForeignKey=true)]
		public Tipo_Deporte Tipo_Deporte1
		{
			get
			{
				return this._Tipo_Deporte1.Entity;
			}
			set
			{
				Tipo_Deporte previousValue = this._Tipo_Deporte1.Entity;
				if (((previousValue != value) 
							|| (this._Tipo_Deporte1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo_Deporte1.Entity = null;
						previousValue.Deporte.Remove(this);
					}
					this._Tipo_Deporte1.Entity = value;
					if ((value != null))
					{
						value.Deporte.Add(this);
						this._tipo_deporte = value.id_tipo_deporte;
					}
					else
					{
						this._tipo_deporte = default(string);
					}
					this.SendPropertyChanged("Tipo_Deporte1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_torneo(torneo entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = this;
		}
		
		private void detach_torneo(torneo entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = null;
		}
		
		private void attach_deportista(deportista entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = this;
		}
		
		private void detach_deportista(deportista entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = null;
		}
		
		private void attach_Equipo(Equipo entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = this;
		}
		
		private void detach_Equipo(Equipo entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.deportista")]
	public partial class deportista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_deportista;
		
		private string _nombre_deportista;
		
		private string _id_deporte;
		
		private string _id_Pais;
		
		private string _Equipo;
		
		private System.Nullable<System.DateTime> _fecha_nacimiento_deportista;
		
		private string _id_seleccion;
		
		private EntityRef<Deporte> _Deporte;
		
		private EntityRef<Pais> _Pais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_deportistaChanging(string value);
    partial void Onid_deportistaChanged();
    partial void Onnombre_deportistaChanging(string value);
    partial void Onnombre_deportistaChanged();
    partial void Onid_deporteChanging(string value);
    partial void Onid_deporteChanged();
    partial void Onid_PaisChanging(string value);
    partial void Onid_PaisChanged();
    partial void OnEquipoChanging(string value);
    partial void OnEquipoChanged();
    partial void Onfecha_nacimiento_deportistaChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_nacimiento_deportistaChanged();
    partial void Onid_seleccionChanging(string value);
    partial void Onid_seleccionChanged();
    #endregion
		
		public deportista()
		{
			this._Deporte = default(EntityRef<Deporte>);
			this._Pais = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_deportista", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_deportista
		{
			get
			{
				return this._id_deportista;
			}
			set
			{
				if ((this._id_deportista != value))
				{
					this.Onid_deportistaChanging(value);
					this.SendPropertyChanging();
					this._id_deportista = value;
					this.SendPropertyChanged("id_deportista");
					this.Onid_deportistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_deportista", DbType="VarChar(50)")]
		public string nombre_deportista
		{
			get
			{
				return this._nombre_deportista;
			}
			set
			{
				if ((this._nombre_deportista != value))
				{
					this.Onnombre_deportistaChanging(value);
					this.SendPropertyChanging();
					this._nombre_deportista = value;
					this.SendPropertyChanged("nombre_deportista");
					this.Onnombre_deportistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_deporte", DbType="VarChar(10)")]
		public string id_deporte
		{
			get
			{
				return this._id_deporte;
			}
			set
			{
				if ((this._id_deporte != value))
				{
					if (this._Deporte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_deporteChanging(value);
					this.SendPropertyChanging();
					this._id_deporte = value;
					this.SendPropertyChanged("id_deporte");
					this.Onid_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Pais", DbType="VarChar(3)")]
		public string id_Pais
		{
			get
			{
				return this._id_Pais;
			}
			set
			{
				if ((this._id_Pais != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_PaisChanging(value);
					this.SendPropertyChanging();
					this._id_Pais = value;
					this.SendPropertyChanged("id_Pais");
					this.Onid_PaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipo", DbType="VarChar(50)")]
		public string Equipo
		{
			get
			{
				return this._Equipo;
			}
			set
			{
				if ((this._Equipo != value))
				{
					this.OnEquipoChanging(value);
					this.SendPropertyChanging();
					this._Equipo = value;
					this.SendPropertyChanged("Equipo");
					this.OnEquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_nacimiento_deportista", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_nacimiento_deportista
		{
			get
			{
				return this._fecha_nacimiento_deportista;
			}
			set
			{
				if ((this._fecha_nacimiento_deportista != value))
				{
					this.Onfecha_nacimiento_deportistaChanging(value);
					this.SendPropertyChanging();
					this._fecha_nacimiento_deportista = value;
					this.SendPropertyChanged("fecha_nacimiento_deportista");
					this.Onfecha_nacimiento_deportistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_seleccion", DbType="VarChar(10)")]
		public string id_seleccion
		{
			get
			{
				return this._id_seleccion;
			}
			set
			{
				if ((this._id_seleccion != value))
				{
					this.Onid_seleccionChanging(value);
					this.SendPropertyChanging();
					this._id_seleccion = value;
					this.SendPropertyChanged("id_seleccion");
					this.Onid_seleccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_deportista", Storage="_Deporte", ThisKey="id_deporte", OtherKey="id_deporte", IsForeignKey=true)]
		public Deporte Deporte
		{
			get
			{
				return this._Deporte.Entity;
			}
			set
			{
				Deporte previousValue = this._Deporte.Entity;
				if (((previousValue != value) 
							|| (this._Deporte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deporte.Entity = null;
						previousValue.deportista.Remove(this);
					}
					this._Deporte.Entity = value;
					if ((value != null))
					{
						value.deportista.Add(this);
						this._id_deporte = value.id_deporte;
					}
					else
					{
						this._id_deporte = default(string);
					}
					this.SendPropertyChanged("Deporte");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_deportista", Storage="_Pais", ThisKey="id_Pais", OtherKey="id_pais", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				Pais previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.deportista.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.deportista.Add(this);
						this._id_Pais = value.id_pais;
					}
					else
					{
						this._id_Pais = default(string);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipo")]
	public partial class Equipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Equipo;
		
		private string _id_pais;
		
		private string _id_deporte;
		
		private string _nombre_equipo;
		
		private EntitySet<informacion_equipo> _informacion_equipo;
		
		private EntitySet<localia> _localia;
		
		private EntitySet<palmares> _palmares;
		
		private EntitySet<staff> _staff;
		
		private EntityRef<Deporte> _Deporte;
		
		private EntityRef<Pais> _Pais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_EquipoChanging(string value);
    partial void Onid_EquipoChanged();
    partial void Onid_paisChanging(string value);
    partial void Onid_paisChanged();
    partial void Onid_deporteChanging(string value);
    partial void Onid_deporteChanged();
    partial void Onnombre_equipoChanging(string value);
    partial void Onnombre_equipoChanged();
    #endregion
		
		public Equipo()
		{
			this._informacion_equipo = new EntitySet<informacion_equipo>(new Action<informacion_equipo>(this.attach_informacion_equipo), new Action<informacion_equipo>(this.detach_informacion_equipo));
			this._localia = new EntitySet<localia>(new Action<localia>(this.attach_localia), new Action<localia>(this.detach_localia));
			this._palmares = new EntitySet<palmares>(new Action<palmares>(this.attach_palmares), new Action<palmares>(this.detach_palmares));
			this._staff = new EntitySet<staff>(new Action<staff>(this.attach_staff), new Action<staff>(this.detach_staff));
			this._Deporte = default(EntityRef<Deporte>);
			this._Pais = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Equipo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Equipo
		{
			get
			{
				return this._id_Equipo;
			}
			set
			{
				if ((this._id_Equipo != value))
				{
					this.Onid_EquipoChanging(value);
					this.SendPropertyChanging();
					this._id_Equipo = value;
					this.SendPropertyChanged("id_Equipo");
					this.Onid_EquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pais", DbType="VarChar(3)")]
		public string id_pais
		{
			get
			{
				return this._id_pais;
			}
			set
			{
				if ((this._id_pais != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_paisChanging(value);
					this.SendPropertyChanging();
					this._id_pais = value;
					this.SendPropertyChanged("id_pais");
					this.Onid_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_deporte", DbType="VarChar(10)")]
		public string id_deporte
		{
			get
			{
				return this._id_deporte;
			}
			set
			{
				if ((this._id_deporte != value))
				{
					if (this._Deporte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_deporteChanging(value);
					this.SendPropertyChanging();
					this._id_deporte = value;
					this.SendPropertyChanged("id_deporte");
					this.Onid_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_equipo", DbType="VarChar(50)")]
		public string nombre_equipo
		{
			get
			{
				return this._nombre_equipo;
			}
			set
			{
				if ((this._nombre_equipo != value))
				{
					this.Onnombre_equipoChanging(value);
					this.SendPropertyChanging();
					this._nombre_equipo = value;
					this.SendPropertyChanged("nombre_equipo");
					this.Onnombre_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_informacion_equipo", Storage="_informacion_equipo", ThisKey="id_Equipo", OtherKey="id_equipo")]
		public EntitySet<informacion_equipo> informacion_equipo
		{
			get
			{
				return this._informacion_equipo;
			}
			set
			{
				this._informacion_equipo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_localia", Storage="_localia", ThisKey="id_Equipo", OtherKey="id_equipo")]
		public EntitySet<localia> localia
		{
			get
			{
				return this._localia;
			}
			set
			{
				this._localia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_palmares", Storage="_palmares", ThisKey="id_Equipo", OtherKey="id_equipo")]
		public EntitySet<palmares> palmares
		{
			get
			{
				return this._palmares;
			}
			set
			{
				this._palmares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_staff", Storage="_staff", ThisKey="id_Equipo", OtherKey="id_equipo")]
		public EntitySet<staff> staff
		{
			get
			{
				return this._staff;
			}
			set
			{
				this._staff.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_Equipo", Storage="_Deporte", ThisKey="id_deporte", OtherKey="id_deporte", IsForeignKey=true)]
		public Deporte Deporte
		{
			get
			{
				return this._Deporte.Entity;
			}
			set
			{
				Deporte previousValue = this._Deporte.Entity;
				if (((previousValue != value) 
							|| (this._Deporte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deporte.Entity = null;
						previousValue.Equipo.Remove(this);
					}
					this._Deporte.Entity = value;
					if ((value != null))
					{
						value.Equipo.Add(this);
						this._id_deporte = value.id_deporte;
					}
					else
					{
						this._id_deporte = default(string);
					}
					this.SendPropertyChanged("Deporte");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Equipo", Storage="_Pais", ThisKey="id_pais", OtherKey="id_pais", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				Pais previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.Equipo.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.Equipo.Add(this);
						this._id_pais = value.id_pais;
					}
					else
					{
						this._id_pais = default(string);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_informacion_equipo(informacion_equipo entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = this;
		}
		
		private void detach_informacion_equipo(informacion_equipo entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = null;
		}
		
		private void attach_localia(localia entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = this;
		}
		
		private void detach_localia(localia entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = null;
		}
		
		private void attach_palmares(palmares entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = this;
		}
		
		private void detach_palmares(palmares entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = null;
		}
		
		private void attach_staff(staff entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = this;
		}
		
		private void detach_staff(staff entity)
		{
			this.SendPropertyChanging();
			entity.Equipo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fecha_torneo")]
	public partial class fecha_torneo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_fecha_torneo;
		
		private string _id_temporada;
		
		private string _nombre_fecha_torneo;
		
		private string _descripcion_fecha_torneo;
		
		private EntitySet<partido> _partido;
		
		private EntityRef<temporada> _temporada;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_fecha_torneoChanging(string value);
    partial void Onid_fecha_torneoChanged();
    partial void Onid_temporadaChanging(string value);
    partial void Onid_temporadaChanged();
    partial void Onnombre_fecha_torneoChanging(string value);
    partial void Onnombre_fecha_torneoChanged();
    partial void Ondescripcion_fecha_torneoChanging(string value);
    partial void Ondescripcion_fecha_torneoChanged();
    #endregion
		
		public fecha_torneo()
		{
			this._partido = new EntitySet<partido>(new Action<partido>(this.attach_partido), new Action<partido>(this.detach_partido));
			this._temporada = default(EntityRef<temporada>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fecha_torneo", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_fecha_torneo
		{
			get
			{
				return this._id_fecha_torneo;
			}
			set
			{
				if ((this._id_fecha_torneo != value))
				{
					this.Onid_fecha_torneoChanging(value);
					this.SendPropertyChanging();
					this._id_fecha_torneo = value;
					this.SendPropertyChanged("id_fecha_torneo");
					this.Onid_fecha_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_temporada", DbType="VarChar(20)")]
		public string id_temporada
		{
			get
			{
				return this._id_temporada;
			}
			set
			{
				if ((this._id_temporada != value))
				{
					if (this._temporada.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_temporadaChanging(value);
					this.SendPropertyChanging();
					this._id_temporada = value;
					this.SendPropertyChanged("id_temporada");
					this.Onid_temporadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_fecha_torneo", DbType="VarChar(50)")]
		public string nombre_fecha_torneo
		{
			get
			{
				return this._nombre_fecha_torneo;
			}
			set
			{
				if ((this._nombre_fecha_torneo != value))
				{
					this.Onnombre_fecha_torneoChanging(value);
					this.SendPropertyChanging();
					this._nombre_fecha_torneo = value;
					this.SendPropertyChanged("nombre_fecha_torneo");
					this.Onnombre_fecha_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion_fecha_torneo", DbType="VarChar(200)")]
		public string descripcion_fecha_torneo
		{
			get
			{
				return this._descripcion_fecha_torneo;
			}
			set
			{
				if ((this._descripcion_fecha_torneo != value))
				{
					this.Ondescripcion_fecha_torneoChanging(value);
					this.SendPropertyChanging();
					this._descripcion_fecha_torneo = value;
					this.SendPropertyChanged("descripcion_fecha_torneo");
					this.Ondescripcion_fecha_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fecha_torneo_partido", Storage="_partido", ThisKey="id_fecha_torneo", OtherKey="id_fecha_torneo")]
		public EntitySet<partido> partido
		{
			get
			{
				return this._partido;
			}
			set
			{
				this._partido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="temporada_fecha_torneo", Storage="_temporada", ThisKey="id_temporada", OtherKey="id_temporada", IsForeignKey=true)]
		public temporada temporada
		{
			get
			{
				return this._temporada.Entity;
			}
			set
			{
				temporada previousValue = this._temporada.Entity;
				if (((previousValue != value) 
							|| (this._temporada.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._temporada.Entity = null;
						previousValue.fecha_torneo.Remove(this);
					}
					this._temporada.Entity = value;
					if ((value != null))
					{
						value.fecha_torneo.Add(this);
						this._id_temporada = value.id_temporada;
					}
					else
					{
						this._id_temporada = default(string);
					}
					this.SendPropertyChanged("temporada");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_partido(partido entity)
		{
			this.SendPropertyChanging();
			entity.fecha_torneo = this;
		}
		
		private void detach_partido(partido entity)
		{
			this.SendPropertyChanging();
			entity.fecha_torneo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.informacion_equipo")]
	public partial class informacion_equipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_informacion_equipo;
		
		private string _id_equipo;
		
		private string _nickname;
		
		private string _presidente_equipo;
		
		private System.Nullable<int> _fundacion_equipo;
		
		private EntityRef<Equipo> _Equipo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_informacion_equipoChanging(string value);
    partial void Onid_informacion_equipoChanged();
    partial void Onid_equipoChanging(string value);
    partial void Onid_equipoChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    partial void Onpresidente_equipoChanging(string value);
    partial void Onpresidente_equipoChanged();
    partial void Onfundacion_equipoChanging(System.Nullable<int> value);
    partial void Onfundacion_equipoChanged();
    #endregion
		
		public informacion_equipo()
		{
			this._Equipo = default(EntityRef<Equipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_informacion_equipo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_informacion_equipo
		{
			get
			{
				return this._id_informacion_equipo;
			}
			set
			{
				if ((this._id_informacion_equipo != value))
				{
					this.Onid_informacion_equipoChanging(value);
					this.SendPropertyChanging();
					this._id_informacion_equipo = value;
					this.SendPropertyChanged("id_informacion_equipo");
					this.Onid_informacion_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_equipo", DbType="VarChar(10)")]
		public string id_equipo
		{
			get
			{
				return this._id_equipo;
			}
			set
			{
				if ((this._id_equipo != value))
				{
					if (this._Equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_equipoChanging(value);
					this.SendPropertyChanging();
					this._id_equipo = value;
					this.SendPropertyChanged("id_equipo");
					this.Onid_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickname", DbType="VarChar(50)")]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presidente_equipo", DbType="VarChar(50)")]
		public string presidente_equipo
		{
			get
			{
				return this._presidente_equipo;
			}
			set
			{
				if ((this._presidente_equipo != value))
				{
					this.Onpresidente_equipoChanging(value);
					this.SendPropertyChanging();
					this._presidente_equipo = value;
					this.SendPropertyChanged("presidente_equipo");
					this.Onpresidente_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fundacion_equipo", DbType="Int")]
		public System.Nullable<int> fundacion_equipo
		{
			get
			{
				return this._fundacion_equipo;
			}
			set
			{
				if ((this._fundacion_equipo != value))
				{
					this.Onfundacion_equipoChanging(value);
					this.SendPropertyChanging();
					this._fundacion_equipo = value;
					this.SendPropertyChanged("fundacion_equipo");
					this.Onfundacion_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_informacion_equipo", Storage="_Equipo", ThisKey="id_equipo", OtherKey="id_Equipo", IsForeignKey=true)]
		public Equipo Equipo
		{
			get
			{
				return this._Equipo.Entity;
			}
			set
			{
				Equipo previousValue = this._Equipo.Entity;
				if (((previousValue != value) 
							|| (this._Equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipo.Entity = null;
						previousValue.informacion_equipo.Remove(this);
					}
					this._Equipo.Entity = value;
					if ((value != null))
					{
						value.informacion_equipo.Add(this);
						this._id_equipo = value.id_Equipo;
					}
					else
					{
						this._id_equipo = default(string);
					}
					this.SendPropertyChanged("Equipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.localia")]
	public partial class localia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_localia;
		
		private string _nombre_localia;
		
		private string _direccion_localia;
		
		private System.Nullable<int> _capacidad_localia;
		
		private System.Nullable<int> _fundacion_localia;
		
		private string _id_equipo;
		
		private EntityRef<Equipo> _Equipo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_localiaChanging(string value);
    partial void Onid_localiaChanged();
    partial void Onnombre_localiaChanging(string value);
    partial void Onnombre_localiaChanged();
    partial void Ondireccion_localiaChanging(string value);
    partial void Ondireccion_localiaChanged();
    partial void Oncapacidad_localiaChanging(System.Nullable<int> value);
    partial void Oncapacidad_localiaChanged();
    partial void Onfundacion_localiaChanging(System.Nullable<int> value);
    partial void Onfundacion_localiaChanged();
    partial void Onid_equipoChanging(string value);
    partial void Onid_equipoChanged();
    #endregion
		
		public localia()
		{
			this._Equipo = default(EntityRef<Equipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_localia", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_localia
		{
			get
			{
				return this._id_localia;
			}
			set
			{
				if ((this._id_localia != value))
				{
					this.Onid_localiaChanging(value);
					this.SendPropertyChanging();
					this._id_localia = value;
					this.SendPropertyChanged("id_localia");
					this.Onid_localiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_localia", DbType="VarChar(50)")]
		public string nombre_localia
		{
			get
			{
				return this._nombre_localia;
			}
			set
			{
				if ((this._nombre_localia != value))
				{
					this.Onnombre_localiaChanging(value);
					this.SendPropertyChanging();
					this._nombre_localia = value;
					this.SendPropertyChanged("nombre_localia");
					this.Onnombre_localiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion_localia", DbType="VarChar(200)")]
		public string direccion_localia
		{
			get
			{
				return this._direccion_localia;
			}
			set
			{
				if ((this._direccion_localia != value))
				{
					this.Ondireccion_localiaChanging(value);
					this.SendPropertyChanging();
					this._direccion_localia = value;
					this.SendPropertyChanged("direccion_localia");
					this.Ondireccion_localiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacidad_localia", DbType="Int")]
		public System.Nullable<int> capacidad_localia
		{
			get
			{
				return this._capacidad_localia;
			}
			set
			{
				if ((this._capacidad_localia != value))
				{
					this.Oncapacidad_localiaChanging(value);
					this.SendPropertyChanging();
					this._capacidad_localia = value;
					this.SendPropertyChanged("capacidad_localia");
					this.Oncapacidad_localiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fundacion_localia", DbType="Int")]
		public System.Nullable<int> fundacion_localia
		{
			get
			{
				return this._fundacion_localia;
			}
			set
			{
				if ((this._fundacion_localia != value))
				{
					this.Onfundacion_localiaChanging(value);
					this.SendPropertyChanging();
					this._fundacion_localia = value;
					this.SendPropertyChanged("fundacion_localia");
					this.Onfundacion_localiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_equipo", DbType="VarChar(10)")]
		public string id_equipo
		{
			get
			{
				return this._id_equipo;
			}
			set
			{
				if ((this._id_equipo != value))
				{
					if (this._Equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_equipoChanging(value);
					this.SendPropertyChanging();
					this._id_equipo = value;
					this.SendPropertyChanged("id_equipo");
					this.Onid_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_localia", Storage="_Equipo", ThisKey="id_equipo", OtherKey="id_Equipo", IsForeignKey=true)]
		public Equipo Equipo
		{
			get
			{
				return this._Equipo.Entity;
			}
			set
			{
				Equipo previousValue = this._Equipo.Entity;
				if (((previousValue != value) 
							|| (this._Equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipo.Entity = null;
						previousValue.localia.Remove(this);
					}
					this._Equipo.Entity = value;
					if ((value != null))
					{
						value.localia.Add(this);
						this._id_equipo = value.id_Equipo;
					}
					else
					{
						this._id_equipo = default(string);
					}
					this.SendPropertyChanged("Equipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pais : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_pais;
		
		private string _nombre_pais;
		
		private string _continente;
		
		private EntitySet<Ciudad> _Ciudad;
		
		private EntitySet<deportista> _deportista;
		
		private EntitySet<Equipo> _Equipo;
		
		private EntitySet<staff> _staff;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_paisChanging(string value);
    partial void Onid_paisChanged();
    partial void Onnombre_paisChanging(string value);
    partial void Onnombre_paisChanged();
    partial void OncontinenteChanging(string value);
    partial void OncontinenteChanged();
    #endregion
		
		public Pais()
		{
			this._Ciudad = new EntitySet<Ciudad>(new Action<Ciudad>(this.attach_Ciudad), new Action<Ciudad>(this.detach_Ciudad));
			this._deportista = new EntitySet<deportista>(new Action<deportista>(this.attach_deportista), new Action<deportista>(this.detach_deportista));
			this._Equipo = new EntitySet<Equipo>(new Action<Equipo>(this.attach_Equipo), new Action<Equipo>(this.detach_Equipo));
			this._staff = new EntitySet<staff>(new Action<staff>(this.attach_staff), new Action<staff>(this.detach_staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pais", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_pais
		{
			get
			{
				return this._id_pais;
			}
			set
			{
				if ((this._id_pais != value))
				{
					this.Onid_paisChanging(value);
					this.SendPropertyChanging();
					this._id_pais = value;
					this.SendPropertyChanged("id_pais");
					this.Onid_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_pais", DbType="VarChar(50)")]
		public string nombre_pais
		{
			get
			{
				return this._nombre_pais;
			}
			set
			{
				if ((this._nombre_pais != value))
				{
					this.Onnombre_paisChanging(value);
					this.SendPropertyChanging();
					this._nombre_pais = value;
					this.SendPropertyChanged("nombre_pais");
					this.Onnombre_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_continente", DbType="VarChar(30)")]
		public string continente
		{
			get
			{
				return this._continente;
			}
			set
			{
				if ((this._continente != value))
				{
					this.OncontinenteChanging(value);
					this.SendPropertyChanging();
					this._continente = value;
					this.SendPropertyChanged("continente");
					this.OncontinenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Ciudad", Storage="_Ciudad", ThisKey="id_pais", OtherKey="id_pais")]
		public EntitySet<Ciudad> Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				this._Ciudad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_deportista", Storage="_deportista", ThisKey="id_pais", OtherKey="id_Pais")]
		public EntitySet<deportista> deportista
		{
			get
			{
				return this._deportista;
			}
			set
			{
				this._deportista.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Equipo", Storage="_Equipo", ThisKey="id_pais", OtherKey="id_pais")]
		public EntitySet<Equipo> Equipo
		{
			get
			{
				return this._Equipo;
			}
			set
			{
				this._Equipo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_staff", Storage="_staff", ThisKey="id_pais", OtherKey="nacionalidad_staff")]
		public EntitySet<staff> staff
		{
			get
			{
				return this._staff;
			}
			set
			{
				this._staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ciudad(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_Ciudad(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
		
		private void attach_deportista(deportista entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_deportista(deportista entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
		
		private void attach_Equipo(Equipo entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_Equipo(Equipo entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
		
		private void attach_staff(staff entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_staff(staff entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.palmares")]
	public partial class palmares : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_ganador;
		
		private string _id_palmares;
		
		private string _id_equipo;
		
		private System.Nullable<int> _gestion;
		
		private EntityRef<Equipo> _Equipo;
		
		private EntityRef<titulos> _titulos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ganadorChanging(string value);
    partial void Onid_ganadorChanged();
    partial void Onid_palmaresChanging(string value);
    partial void Onid_palmaresChanged();
    partial void Onid_equipoChanging(string value);
    partial void Onid_equipoChanged();
    partial void OngestionChanging(System.Nullable<int> value);
    partial void OngestionChanged();
    #endregion
		
		public palmares()
		{
			this._Equipo = default(EntityRef<Equipo>);
			this._titulos = default(EntityRef<titulos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ganador", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_ganador
		{
			get
			{
				return this._id_ganador;
			}
			set
			{
				if ((this._id_ganador != value))
				{
					this.Onid_ganadorChanging(value);
					this.SendPropertyChanging();
					this._id_ganador = value;
					this.SendPropertyChanged("id_ganador");
					this.Onid_ganadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_palmares", DbType="VarChar(10)")]
		public string id_palmares
		{
			get
			{
				return this._id_palmares;
			}
			set
			{
				if ((this._id_palmares != value))
				{
					if (this._titulos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_palmaresChanging(value);
					this.SendPropertyChanging();
					this._id_palmares = value;
					this.SendPropertyChanged("id_palmares");
					this.Onid_palmaresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_equipo", DbType="VarChar(10)")]
		public string id_equipo
		{
			get
			{
				return this._id_equipo;
			}
			set
			{
				if ((this._id_equipo != value))
				{
					if (this._Equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_equipoChanging(value);
					this.SendPropertyChanging();
					this._id_equipo = value;
					this.SendPropertyChanged("id_equipo");
					this.Onid_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gestion", DbType="Int")]
		public System.Nullable<int> gestion
		{
			get
			{
				return this._gestion;
			}
			set
			{
				if ((this._gestion != value))
				{
					this.OngestionChanging(value);
					this.SendPropertyChanging();
					this._gestion = value;
					this.SendPropertyChanged("gestion");
					this.OngestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_palmares", Storage="_Equipo", ThisKey="id_equipo", OtherKey="id_Equipo", IsForeignKey=true)]
		public Equipo Equipo
		{
			get
			{
				return this._Equipo.Entity;
			}
			set
			{
				Equipo previousValue = this._Equipo.Entity;
				if (((previousValue != value) 
							|| (this._Equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipo.Entity = null;
						previousValue.palmares.Remove(this);
					}
					this._Equipo.Entity = value;
					if ((value != null))
					{
						value.palmares.Add(this);
						this._id_equipo = value.id_Equipo;
					}
					else
					{
						this._id_equipo = default(string);
					}
					this.SendPropertyChanged("Equipo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="titulos_palmares", Storage="_titulos", ThisKey="id_palmares", OtherKey="id_titulo", IsForeignKey=true)]
		public titulos titulos
		{
			get
			{
				return this._titulos.Entity;
			}
			set
			{
				titulos previousValue = this._titulos.Entity;
				if (((previousValue != value) 
							|| (this._titulos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._titulos.Entity = null;
						previousValue.palmares.Remove(this);
					}
					this._titulos.Entity = value;
					if ((value != null))
					{
						value.palmares.Add(this);
						this._id_palmares = value.id_titulo;
					}
					else
					{
						this._id_palmares = default(string);
					}
					this.SendPropertyChanged("titulos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.partido")]
	public partial class partido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_partido;
		
		private string _id_fecha_torneo;
		
		private string _nombre_partido;
		
		private string _ocurrencias_partido;
		
		private string _ganador_partido;
		
		private EntityRef<fecha_torneo> _fecha_torneo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_partidoChanging(string value);
    partial void Onid_partidoChanged();
    partial void Onid_fecha_torneoChanging(string value);
    partial void Onid_fecha_torneoChanged();
    partial void Onnombre_partidoChanging(string value);
    partial void Onnombre_partidoChanged();
    partial void Onocurrencias_partidoChanging(string value);
    partial void Onocurrencias_partidoChanged();
    partial void Onganador_partidoChanging(string value);
    partial void Onganador_partidoChanged();
    #endregion
		
		public partido()
		{
			this._fecha_torneo = default(EntityRef<fecha_torneo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_partido", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_partido
		{
			get
			{
				return this._id_partido;
			}
			set
			{
				if ((this._id_partido != value))
				{
					this.Onid_partidoChanging(value);
					this.SendPropertyChanging();
					this._id_partido = value;
					this.SendPropertyChanged("id_partido");
					this.Onid_partidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fecha_torneo", DbType="VarChar(20)")]
		public string id_fecha_torneo
		{
			get
			{
				return this._id_fecha_torneo;
			}
			set
			{
				if ((this._id_fecha_torneo != value))
				{
					if (this._fecha_torneo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fecha_torneoChanging(value);
					this.SendPropertyChanging();
					this._id_fecha_torneo = value;
					this.SendPropertyChanged("id_fecha_torneo");
					this.Onid_fecha_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_partido", DbType="VarChar(50)")]
		public string nombre_partido
		{
			get
			{
				return this._nombre_partido;
			}
			set
			{
				if ((this._nombre_partido != value))
				{
					this.Onnombre_partidoChanging(value);
					this.SendPropertyChanging();
					this._nombre_partido = value;
					this.SendPropertyChanged("nombre_partido");
					this.Onnombre_partidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ocurrencias_partido", DbType="VarChar(200)")]
		public string ocurrencias_partido
		{
			get
			{
				return this._ocurrencias_partido;
			}
			set
			{
				if ((this._ocurrencias_partido != value))
				{
					this.Onocurrencias_partidoChanging(value);
					this.SendPropertyChanging();
					this._ocurrencias_partido = value;
					this.SendPropertyChanged("ocurrencias_partido");
					this.Onocurrencias_partidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ganador_partido", DbType="VarChar(50)")]
		public string ganador_partido
		{
			get
			{
				return this._ganador_partido;
			}
			set
			{
				if ((this._ganador_partido != value))
				{
					this.Onganador_partidoChanging(value);
					this.SendPropertyChanging();
					this._ganador_partido = value;
					this.SendPropertyChanged("ganador_partido");
					this.Onganador_partidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fecha_torneo_partido", Storage="_fecha_torneo", ThisKey="id_fecha_torneo", OtherKey="id_fecha_torneo", IsForeignKey=true)]
		public fecha_torneo fecha_torneo
		{
			get
			{
				return this._fecha_torneo.Entity;
			}
			set
			{
				fecha_torneo previousValue = this._fecha_torneo.Entity;
				if (((previousValue != value) 
							|| (this._fecha_torneo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fecha_torneo.Entity = null;
						previousValue.partido.Remove(this);
					}
					this._fecha_torneo.Entity = value;
					if ((value != null))
					{
						value.partido.Add(this);
						this._id_fecha_torneo = value.id_fecha_torneo;
					}
					else
					{
						this._id_fecha_torneo = default(string);
					}
					this.SendPropertyChanged("fecha_torneo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_staff;
		
		private string _id_equipo;
		
		private string _nombre_staff;
		
		private System.Nullable<System.DateTime> _fecha_nacimiento_staff;
		
		private string _tipo_staff;
		
		private string _nacionalidad_staff;
		
		private EntityRef<Equipo> _Equipo;
		
		private EntityRef<Pais> _Pais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_staffChanging(string value);
    partial void Onid_staffChanged();
    partial void Onid_equipoChanging(string value);
    partial void Onid_equipoChanged();
    partial void Onnombre_staffChanging(string value);
    partial void Onnombre_staffChanged();
    partial void Onfecha_nacimiento_staffChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_nacimiento_staffChanged();
    partial void Ontipo_staffChanging(string value);
    partial void Ontipo_staffChanged();
    partial void Onnacionalidad_staffChanging(string value);
    partial void Onnacionalidad_staffChanged();
    #endregion
		
		public staff()
		{
			this._Equipo = default(EntityRef<Equipo>);
			this._Pais = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_staff", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_staff
		{
			get
			{
				return this._id_staff;
			}
			set
			{
				if ((this._id_staff != value))
				{
					this.Onid_staffChanging(value);
					this.SendPropertyChanging();
					this._id_staff = value;
					this.SendPropertyChanged("id_staff");
					this.Onid_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_equipo", DbType="VarChar(10)")]
		public string id_equipo
		{
			get
			{
				return this._id_equipo;
			}
			set
			{
				if ((this._id_equipo != value))
				{
					if (this._Equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_equipoChanging(value);
					this.SendPropertyChanging();
					this._id_equipo = value;
					this.SendPropertyChanged("id_equipo");
					this.Onid_equipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_staff", DbType="VarChar(50)")]
		public string nombre_staff
		{
			get
			{
				return this._nombre_staff;
			}
			set
			{
				if ((this._nombre_staff != value))
				{
					this.Onnombre_staffChanging(value);
					this.SendPropertyChanging();
					this._nombre_staff = value;
					this.SendPropertyChanged("nombre_staff");
					this.Onnombre_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_nacimiento_staff", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha_nacimiento_staff
		{
			get
			{
				return this._fecha_nacimiento_staff;
			}
			set
			{
				if ((this._fecha_nacimiento_staff != value))
				{
					this.Onfecha_nacimiento_staffChanging(value);
					this.SendPropertyChanging();
					this._fecha_nacimiento_staff = value;
					this.SendPropertyChanged("fecha_nacimiento_staff");
					this.Onfecha_nacimiento_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_staff", DbType="VarChar(50)")]
		public string tipo_staff
		{
			get
			{
				return this._tipo_staff;
			}
			set
			{
				if ((this._tipo_staff != value))
				{
					this.Ontipo_staffChanging(value);
					this.SendPropertyChanging();
					this._tipo_staff = value;
					this.SendPropertyChanged("tipo_staff");
					this.Ontipo_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nacionalidad_staff", DbType="VarChar(3)")]
		public string nacionalidad_staff
		{
			get
			{
				return this._nacionalidad_staff;
			}
			set
			{
				if ((this._nacionalidad_staff != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnacionalidad_staffChanging(value);
					this.SendPropertyChanging();
					this._nacionalidad_staff = value;
					this.SendPropertyChanged("nacionalidad_staff");
					this.Onnacionalidad_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipo_staff", Storage="_Equipo", ThisKey="id_equipo", OtherKey="id_Equipo", IsForeignKey=true)]
		public Equipo Equipo
		{
			get
			{
				return this._Equipo.Entity;
			}
			set
			{
				Equipo previousValue = this._Equipo.Entity;
				if (((previousValue != value) 
							|| (this._Equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipo.Entity = null;
						previousValue.staff.Remove(this);
					}
					this._Equipo.Entity = value;
					if ((value != null))
					{
						value.staff.Add(this);
						this._id_equipo = value.id_Equipo;
					}
					else
					{
						this._id_equipo = default(string);
					}
					this.SendPropertyChanged("Equipo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_staff", Storage="_Pais", ThisKey="nacionalidad_staff", OtherKey="id_pais", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				Pais previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.staff.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.staff.Add(this);
						this._nacionalidad_staff = value.id_pais;
					}
					else
					{
						this._nacionalidad_staff = default(string);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temporada")]
	public partial class temporada : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_temporada;
		
		private string _id_torneo;
		
		private System.Nullable<int> _anio_temporada;
		
		private string _descripcion_temporada;
		
		private EntitySet<fecha_torneo> _fecha_torneo;
		
		private EntityRef<torneo> _torneo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_temporadaChanging(string value);
    partial void Onid_temporadaChanged();
    partial void Onid_torneoChanging(string value);
    partial void Onid_torneoChanged();
    partial void Onanio_temporadaChanging(System.Nullable<int> value);
    partial void Onanio_temporadaChanged();
    partial void Ondescripcion_temporadaChanging(string value);
    partial void Ondescripcion_temporadaChanged();
    #endregion
		
		public temporada()
		{
			this._fecha_torneo = new EntitySet<fecha_torneo>(new Action<fecha_torneo>(this.attach_fecha_torneo), new Action<fecha_torneo>(this.detach_fecha_torneo));
			this._torneo = default(EntityRef<torneo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_temporada", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_temporada
		{
			get
			{
				return this._id_temporada;
			}
			set
			{
				if ((this._id_temporada != value))
				{
					this.Onid_temporadaChanging(value);
					this.SendPropertyChanging();
					this._id_temporada = value;
					this.SendPropertyChanged("id_temporada");
					this.Onid_temporadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_torneo", DbType="VarChar(20)")]
		public string id_torneo
		{
			get
			{
				return this._id_torneo;
			}
			set
			{
				if ((this._id_torneo != value))
				{
					if (this._torneo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_torneoChanging(value);
					this.SendPropertyChanging();
					this._id_torneo = value;
					this.SendPropertyChanged("id_torneo");
					this.Onid_torneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anio_temporada", DbType="Int")]
		public System.Nullable<int> anio_temporada
		{
			get
			{
				return this._anio_temporada;
			}
			set
			{
				if ((this._anio_temporada != value))
				{
					this.Onanio_temporadaChanging(value);
					this.SendPropertyChanging();
					this._anio_temporada = value;
					this.SendPropertyChanged("anio_temporada");
					this.Onanio_temporadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion_temporada", DbType="VarChar(50)")]
		public string descripcion_temporada
		{
			get
			{
				return this._descripcion_temporada;
			}
			set
			{
				if ((this._descripcion_temporada != value))
				{
					this.Ondescripcion_temporadaChanging(value);
					this.SendPropertyChanging();
					this._descripcion_temporada = value;
					this.SendPropertyChanged("descripcion_temporada");
					this.Ondescripcion_temporadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="temporada_fecha_torneo", Storage="_fecha_torneo", ThisKey="id_temporada", OtherKey="id_temporada")]
		public EntitySet<fecha_torneo> fecha_torneo
		{
			get
			{
				return this._fecha_torneo;
			}
			set
			{
				this._fecha_torneo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="torneo_temporada", Storage="_torneo", ThisKey="id_torneo", OtherKey="id_torneo", IsForeignKey=true)]
		public torneo torneo
		{
			get
			{
				return this._torneo.Entity;
			}
			set
			{
				torneo previousValue = this._torneo.Entity;
				if (((previousValue != value) 
							|| (this._torneo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._torneo.Entity = null;
						previousValue.temporada.Remove(this);
					}
					this._torneo.Entity = value;
					if ((value != null))
					{
						value.temporada.Add(this);
						this._id_torneo = value.id_torneo;
					}
					else
					{
						this._id_torneo = default(string);
					}
					this.SendPropertyChanged("torneo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fecha_torneo(fecha_torneo entity)
		{
			this.SendPropertyChanging();
			entity.temporada = this;
		}
		
		private void detach_fecha_torneo(fecha_torneo entity)
		{
			this.SendPropertyChanging();
			entity.temporada = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_competicion")]
	public partial class tipo_competicion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_tipo_competicion;
		
		private string _descripcion_tipo_competicion;
		
		private string _nivel_organizacional;
		
		private EntitySet<torneo> _torneo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tipo_competicionChanging(string value);
    partial void Onid_tipo_competicionChanged();
    partial void Ondescripcion_tipo_competicionChanging(string value);
    partial void Ondescripcion_tipo_competicionChanged();
    partial void Onnivel_organizacionalChanging(string value);
    partial void Onnivel_organizacionalChanged();
    #endregion
		
		public tipo_competicion()
		{
			this._torneo = new EntitySet<torneo>(new Action<torneo>(this.attach_torneo), new Action<torneo>(this.detach_torneo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo_competicion", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_tipo_competicion
		{
			get
			{
				return this._id_tipo_competicion;
			}
			set
			{
				if ((this._id_tipo_competicion != value))
				{
					this.Onid_tipo_competicionChanging(value);
					this.SendPropertyChanging();
					this._id_tipo_competicion = value;
					this.SendPropertyChanged("id_tipo_competicion");
					this.Onid_tipo_competicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion_tipo_competicion", DbType="VarChar(50)")]
		public string descripcion_tipo_competicion
		{
			get
			{
				return this._descripcion_tipo_competicion;
			}
			set
			{
				if ((this._descripcion_tipo_competicion != value))
				{
					this.Ondescripcion_tipo_competicionChanging(value);
					this.SendPropertyChanging();
					this._descripcion_tipo_competicion = value;
					this.SendPropertyChanged("descripcion_tipo_competicion");
					this.Ondescripcion_tipo_competicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivel_organizacional", DbType="VarChar(50)")]
		public string nivel_organizacional
		{
			get
			{
				return this._nivel_organizacional;
			}
			set
			{
				if ((this._nivel_organizacional != value))
				{
					this.Onnivel_organizacionalChanging(value);
					this.SendPropertyChanging();
					this._nivel_organizacional = value;
					this.SendPropertyChanged("nivel_organizacional");
					this.Onnivel_organizacionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_competicion_torneo", Storage="_torneo", ThisKey="id_tipo_competicion", OtherKey="tipo_torneo")]
		public EntitySet<torneo> torneo
		{
			get
			{
				return this._torneo;
			}
			set
			{
				this._torneo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_torneo(torneo entity)
		{
			this.SendPropertyChanging();
			entity.tipo_competicion = this;
		}
		
		private void detach_torneo(torneo entity)
		{
			this.SendPropertyChanging();
			entity.tipo_competicion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo_Deporte")]
	public partial class Tipo_Deporte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_tipo_deporte;
		
		private string _descripcion;
		
		private EntitySet<Deporte> _Deporte;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tipo_deporteChanging(string value);
    partial void Onid_tipo_deporteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public Tipo_Deporte()
		{
			this._Deporte = new EntitySet<Deporte>(new Action<Deporte>(this.attach_Deporte), new Action<Deporte>(this.detach_Deporte));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo_deporte", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_tipo_deporte
		{
			get
			{
				return this._id_tipo_deporte;
			}
			set
			{
				if ((this._id_tipo_deporte != value))
				{
					this.Onid_tipo_deporteChanging(value);
					this.SendPropertyChanging();
					this._id_tipo_deporte = value;
					this.SendPropertyChanged("id_tipo_deporte");
					this.Onid_tipo_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(50)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Deporte_Deporte", Storage="_Deporte", ThisKey="id_tipo_deporte", OtherKey="tipo_deporte")]
		public EntitySet<Deporte> Deporte
		{
			get
			{
				return this._Deporte;
			}
			set
			{
				this._Deporte.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Deporte(Deporte entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Deporte1 = this;
		}
		
		private void detach_Deporte(Deporte entity)
		{
			this.SendPropertyChanging();
			entity.Tipo_Deporte1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.titulos")]
	public partial class titulos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_titulo;
		
		private string _nombre_titulo;
		
		private string _descripcion_titulo;
		
		private EntitySet<palmares> _palmares;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tituloChanging(string value);
    partial void Onid_tituloChanged();
    partial void Onnombre_tituloChanging(string value);
    partial void Onnombre_tituloChanged();
    partial void Ondescripcion_tituloChanging(string value);
    partial void Ondescripcion_tituloChanged();
    #endregion
		
		public titulos()
		{
			this._palmares = new EntitySet<palmares>(new Action<palmares>(this.attach_palmares), new Action<palmares>(this.detach_palmares));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_titulo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_titulo
		{
			get
			{
				return this._id_titulo;
			}
			set
			{
				if ((this._id_titulo != value))
				{
					this.Onid_tituloChanging(value);
					this.SendPropertyChanging();
					this._id_titulo = value;
					this.SendPropertyChanged("id_titulo");
					this.Onid_tituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_titulo", DbType="VarChar(100)")]
		public string nombre_titulo
		{
			get
			{
				return this._nombre_titulo;
			}
			set
			{
				if ((this._nombre_titulo != value))
				{
					this.Onnombre_tituloChanging(value);
					this.SendPropertyChanging();
					this._nombre_titulo = value;
					this.SendPropertyChanged("nombre_titulo");
					this.Onnombre_tituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion_titulo", DbType="VarChar(200)")]
		public string descripcion_titulo
		{
			get
			{
				return this._descripcion_titulo;
			}
			set
			{
				if ((this._descripcion_titulo != value))
				{
					this.Ondescripcion_tituloChanging(value);
					this.SendPropertyChanging();
					this._descripcion_titulo = value;
					this.SendPropertyChanged("descripcion_titulo");
					this.Ondescripcion_tituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="titulos_palmares", Storage="_palmares", ThisKey="id_titulo", OtherKey="id_palmares")]
		public EntitySet<palmares> palmares
		{
			get
			{
				return this._palmares;
			}
			set
			{
				this._palmares.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_palmares(palmares entity)
		{
			this.SendPropertyChanging();
			entity.titulos = this;
		}
		
		private void detach_palmares(palmares entity)
		{
			this.SendPropertyChanging();
			entity.titulos = null;
		}
	}
}
#pragma warning restore 1591
